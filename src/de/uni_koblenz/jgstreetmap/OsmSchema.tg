TGraph 2;
Schema de.uni_koblenz.jgstreetmap.osmschema.OsmSchema;
GraphClass OsmGraph;
EnumDomain routing.SegmentType (NOWAY, CYCLEWAY, MOTORWAY, PRIMARY, SECONDARY, TERTIARY, RESIDENTIAL, FOOTWAY, UNSURFACED, SERVICE, WORMHOLE);
Package kdtree;
Package map;
Package routing;
Package;
VertexClass kdtree.KDTree {levels: Integer};
abstract VertexClass kdtree.Key {keyValue: Double};
VertexClass kdtree.NodeSet;
VertexClass kdtree.XKey: kdtree.Key;
VertexClass kdtree.YKey: kdtree.Key;
VertexClass map.Area: map.Way;
VertexClass map.Node: map.OsmPrimitive {latitude: Double, longitude: Double};
abstract VertexClass map.OsmPrimitive {osmId: Long, tags: Map<String, String>, timestamp: Long, user: String};
VertexClass map.Relation: map.OsmPrimitive;
VertexClass map.Way: map.OsmPrimitive {closed: Boolean, wayType: routing.SegmentType};
EdgeClass kdtree.HasRoot from kdtree.KDTree (0,1) role tree to kdtree.Key (1,1) role root aggregation shared;
EdgeClass kdtree.HasSet from kdtree.Key (1,1) role key to kdtree.NodeSet (0,1) role set;
EdgeClass kdtree.HasElement from kdtree.NodeSet (0,1) role set to map.Node (1,*) role element aggregation shared;
EdgeClass kdtree.HasYChild from kdtree.XKey (0,1) role parent to kdtree.YKey (0,2) role child aggregation shared;
EdgeClass kdtree.HasXChild from kdtree.YKey (0,1) role parent to kdtree.XKey (0,2) role child aggregation shared;
EdgeClass map.HasMember from map.Relation (0,*) role relation to map.OsmPrimitive (0,*) role member aggregation shared {memberType: String, memberRole: String};
EdgeClass routing.Segment from map.Node (0,*) to map.Node (0,*) {oneway: Boolean, wayType: routing.SegmentType, length: Double, wayId: Long};
EdgeClass map.HasNode from map.Way (0,*) role way to map.Node (1,*) role node aggregation shared;
